<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<meta http-equiv="content-type" content="text/html; charset=iso-8859-1"/>
	<title>class Password</title>
	<link type="text/css" rel="stylesheet" href="../../$resources/style.css"/>
	<script type="text/javascript" language="javascript" src="../../$resources/treeview.js"></script>
</head>
<body onload="toggler.setupTreeView('MainList');toggler.backToMemorizedState('MainList', 'btnToggle')">
	<ul class="navig">
	<li><a href="javascript:toggler.toggleAll('MainList', 'btnToggle')" class="expandAllBtn" id="btnToggle">Expand all</a></li><li><a href="../../help.htm" class="helpBtn">Help</a></li><li><a href="../../index-all.htm" class="indexAllBtn">Index</a></li><li><a href="class-APR1.htm" class="left">Prev class</a></li><li><a href="package-summary.htm" class="top">Package</a></li>
	</ul>
	<h1 class="class">Password</h1>
	<div id="MainList">
	<div class="description"><p>Class <span class="title">Password\Implementation\Password</span> implements </p><ul class="description"><li>The PBKDF based password hashing implementation <br />
Use this class to generate and validate PBKDF hashed passwords.<br />
<br />
PHP version 5.3</li><li class="smaller">@see http://httpd.apache.org/docs/2.2/misc/password_encryptions.html</li><li class="smaller">@category PHPCryptLib</li><li class="smaller">@package Password</li><li class="smaller">@subpackage Implementation</li><li class="smaller">@author Anthony Ferrara &lt;ircmaxell@ircmaxell.com&gt;</li><li>File: CryptLib/Password/Implementation/PBKDF.php</li></ul></div><h2>Properties</h2><ul class="summary"><li class="Collapsed" id="derivation"><a href="javascript:void(0);" class="property-pro" target="main">$derivation</a><ul class="description"><li>Protected <span class="link">PBKDF</span> <span class="smallTitle">$derivation</span><span class="defVal"> = null</span></li></ul></li><li class="Collapsed" id="iterations"><a href="javascript:void(0);" class="property-pro" target="main">$iterations</a><ul class="description"><li>Protected <a href="../../datatype-int.htm" class="link">int</a> <span class="smallTitle">$iterations</span><span class="defVal"> = 5000</span></li></ul></li><li class="Collapsed" id="size"><a href="javascript:void(0);" class="property-pro" target="main">$size</a><ul class="description"><li>Protected <a href="../../datatype-int.htm" class="link">int</a> <span class="smallTitle">$size</span><span class="defVal"> = 40</span></li></ul></li></ul><h2>Functions</h2><ul class="summary"><li class="Collapsed" id="f4d7a599d0d844"><a href="javascript:void(0);" class="method-pub" target="main">detect</a>(<a href="../../datatype-string.htm" class="link">string</a> $hash)<ul class="description"><li>Public static <a href="../../datatype-boolean.htm" class="link">boolean</a> <span class="smallTitle">detect</span>(<a href="../../datatype-string.htm" class="link">string</a> $hash)</li><li>Determine if the hash was made with this method</li><li class="smaller">@param string $hash The hashed data to check</li><li class="smaller">@return boolean Was the hash created by this method</li></ul></li><li class="Collapsed" id="f4d7a599d0f754"><a href="javascript:void(0);" class="method-pub" target="main">loadFromHash</a>(<a href="../../datatype-string.htm" class="link">string</a> $hash)<ul class="description"><li>Public static <a href="../../Password/Implementation/class-Password.htm" class="link">Password\Implementation\Password</a> <span class="smallTitle">loadFromHash</span>(<a href="../../datatype-string.htm" class="link">string</a> $hash)</li><li>Load an instance of the class based upon the supplied hash</li><li class="smaller">@param string $hash The hash to load from</li><li class="smaller">@return Password the created instance</li><li class="smaller">@throws InvalidArgumentException if the hash wasn't created here</li></ul></li><li class="Collapsed" id="f4d7a599d12653"><a href="javascript:void(0);" class="method-pub" target="main">__construct</a>(<span class="link">\CryptLib\Key\Derivation\PBKDF</span> $derivation<span class="defVal"> = null</span>, <a href="../../datatype-int.htm" class="link">int</a> $size<span class="defVal"> = 40</span>, <a href="../../datatype-int.htm" class="link">int</a> $iterations<span class="defVal"> = 5000</span>)<ul class="description"><li>Public <span class="link">void;</span> <span class="smallTitle">__construct</span>(<span class="link">\CryptLib\Key\Derivation\PBKDF</span> $derivation<span class="defVal"> = null</span>, <a href="../../datatype-int.htm" class="link">int</a> $size<span class="defVal"> = 40</span>, <a href="../../datatype-int.htm" class="link">int</a> $iterations<span class="defVal"> = 5000</span>)</li><li>Build a new instance of the PBKDF password class</li><li class="smaller">@param PBKDF $derivation The derivation class to use</li><li class="smaller">@param int $size The size of hash to generate</li><li class="smaller">@param int $iterations The number of iterations to perform</li></ul></li><li class="Collapsed" id="f4d7a599d17044"><a href="javascript:void(0);" class="method-pub" target="main">create</a>(<a href="../../datatype-string.htm" class="link">string</a> $password)<ul class="description"><li>Public <a href="../../datatype-string.htm" class="link">string</a> <span class="smallTitle">create</span>(<a href="../../datatype-string.htm" class="link">string</a> $password)</li><li>Create a password hash for a given plain text password</li><li class="smaller">@param string $password The password to hash</li><li class="smaller">@return string The formatted password hash</li></ul></li><li class="Collapsed" id="f4d7a599d19b48"><a href="javascript:void(0);" class="method-pub" target="main">verify</a>(<a href="../../datatype-string.htm" class="link">string</a> $hash, <a href="../../datatype-string.htm" class="link">string</a> $password)<ul class="description"><li>Public <a href="../../datatype-boolean.htm" class="link">boolean</a> <span class="smallTitle">verify</span>(<a href="../../datatype-string.htm" class="link">string</a> $hash, <a href="../../datatype-string.htm" class="link">string</a> $password)</li><li>Verify a password hash against a given plain text password</li><li class="smaller">@param string $hash The supplied ahsh to validate</li><li class="smaller">@param string $password The password to hash</li><li class="smaller">@return boolean Does the password validate against the hash</li></ul></li><li class="Collapsed" id="f4d7a599d1d64a"><a href="javascript:void(0);" class="method-pro" target="main">hash</a>(<a href="../../datatype-string.htm" class="link">string</a> $password, <a href="../../datatype-string.htm" class="link">string</a> $salt, <a href="../../datatype-int.htm" class="link">int</a> $iterations, <a href="../../datatype-mixed.htm" class="link">mixed</a> $size)<ul class="description"><li>Protected <a href="../../datatype-string.htm" class="link">string</a> <span class="smallTitle">hash</span>(<a href="../../datatype-string.htm" class="link">string</a> $password, <a href="../../datatype-string.htm" class="link">string</a> $salt, <a href="../../datatype-int.htm" class="link">int</a> $iterations, <a href="../../datatype-mixed.htm" class="link">mixed</a> $size)</li><li>Perform the hashing of the password</li><li class="smaller">@param string $password The plain text password to hash</li><li class="smaller">@param string $salt The 8 byte salt to use</li><li class="smaller">@param int $iterations The number of iterations to use</li><li class="smaller">@return string The hashed password</li></ul></li></ul>
	</div>
	<div id="footer">Documentation generated on Mar 11, 2011, 12:19:26 -0500 by <a href="http://pear.php.net/package/PHP_UML/" target="_new">PHP_UML</a></div>
</body>
</html>