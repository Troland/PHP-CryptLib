<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<meta http-equiv="content-type" content="text/html; charset=iso-8859-1"/>
	<title>class AbstractHash</title>
	<link type="text/css" rel="stylesheet" href="../$resources/style.css"/>
	<script type="text/javascript" language="javascript" src="../$resources/treeview.js"></script>
</head>
<body onload="toggler.setupTreeView('MainList');toggler.backToMemorizedState('MainList', 'btnToggle')">
	<ul class="navig">
	<li><a href="javascript:toggler.toggleAll('MainList', 'btnToggle')" class="expandAllBtn" id="btnToggle">Expand all</a></li><li><a href="../help.htm" class="helpBtn">Help</a></li><li><a href="../index-all.htm" class="indexAllBtn">Index</a></li><li><a href="package-summary.htm" class="top">Package</a></li><li><a href="class-HexDecorator.htm" class="right">Next class</a></li>
	</ul>
	<h1 class="class abstract">AbstractHash</h1>
	<div id="MainList">
	<div class="description"><p>Abstract class <span class="title">Hash\AbstractHash</span> implements <a href="../Hash/interface-Hash.htm" class="link2">Hash\Hash</a></p><ul class="description"><li>A base class implementation of the hash library</li><li class="smaller">@category PHPCryptLib</li><li class="smaller">@package Hash</li><li class="smaller">@author Anthony Ferrara &lt;ircmaxell@ircmaxell.com&gt;</li><li>All implemented interfaces: <a href="../Hash/interface-Hash.htm" class="link2">Hash\Hash</a></li><li>All subclasses: <a href="../Hash/class-HexDecorator.htm" class="link2">Hash\HexDecorator</a></li><li>File: CryptLib/Hash/AbstractHash.php</li></ul></div><h2>Properties</h2><ul class="summary"><li class="Collapsed" id="algo"><a href="javascript:void(0);" class="property-pro" target="main">$algo</a><ul class="description"><li>Protected <a href="../datatype-string.htm" class="link">string</a> <span class="smallTitle">$algo</span><span class="defVal"> = &#039;&#039;</span></li></ul></li><li class="Collapsed" id="blockSize"><a href="javascript:void(0);" class="property-pro" target="main">$blockSize</a><ul class="description"><li>Protected <a href="../datatype-int.htm" class="link">int</a> <span class="smallTitle">$blockSize</span><span class="defVal"> = 64</span></li></ul></li></ul><h2>Functions</h2><ul class="summary"><li class="Collapsed" id="f4d7a599b459fd"><a href="javascript:void(0);" class="method-pub" target="main">__construct</a>(<a href="../datatype-string.htm" class="link">string</a> $algo)<ul class="description"><li>Public <a href="../datatype-void.htm" class="link">void</a> <span class="smallTitle">__construct</span>(<a href="../datatype-string.htm" class="link">string</a> $algo)</li><li>Build the instance of the hash</li><li class="smaller">@param string $algo The name of the algorithm to use for this instance</li><li class="smaller">@throws InvalidArgumentException if the algorithm isn't supported</li></ul></li><li class="Collapsed" id="f4d7a599b480fd"><a href="javascript:void(0);" class="method-pub" target="main">__invoke</a>(<a href="../datatype-array.htm" class="link">array</a> $args)<ul class="description"><li>Public <a href="../datatype-string.htm" class="link">string</a> <span class="smallTitle">__invoke</span>(<a href="../datatype-array.htm" class="link">array</a> $args)</li><li>Make the hash invokable (`$hash($data, $binary = false)`) <br />
This is a proxy for Hash::evaluate();</li><li class="smaller">@param array $args The arguments for the invoked method</li><li class="smaller">@see Hash::evaluate()</li><li class="smaller">@return string The hashed value</li><li>Make the hash invokable (`$hash($data, $binary = false)`) <br />
This is a proxy for Hash::evaluate();<br/><span class="note">(copied from interface <a href="../Hash/interface-Hash.htm" class="link">Hash\Hash</a>)</span></li></ul></li><li class="Collapsed" id="f4d7a599b4a7fe"><a href="javascript:void(0);" class="method-pub" target="main">getBlockSize</a>()<ul class="description"><li>Public <a href="../datatype-int.htm" class="link">int</a> <span class="smallTitle">getBlockSize</span>()</li><li>Get the block size used by the algorithm</li><li class="smaller">@return int The block size of the hash algorithm</li><li>Get the block size used by the algorithm<br/><span class="note">(copied from interface <a href="../Hash/interface-Hash.htm" class="link">Hash\Hash</a>)</span></li></ul></li><li class="Collapsed" id="f4d7a599b4bf05"><a href="javascript:void(0);" class="method-pub" target="main">getName</a>()<ul class="description"><li>Public <a href="../datatype-string.htm" class="link">string</a> <span class="smallTitle">getName</span>()</li><li>Get the name of the current hash algorithm</li><li class="smaller">@return string The name of the current hash algorithm</li><li>Get the name of the current hash algorithm<br/><span class="note">(copied from interface <a href="../Hash/interface-Hash.htm" class="link">Hash\Hash</a>)</span></li></ul></li><li class="Collapsed" id="f4d7a599b4d6fa"><a href="javascript:void(0);" class="method-pub" target="main">getSize</a>()<ul class="description"><li>Public <a href="../datatype-int.htm" class="link">int</a> <span class="smallTitle">getSize</span>()</li><li>Get the size of the hashed data</li><li class="smaller">@return int The size of the hashed string</li><li>Get the size of the hashed data<br/><span class="note">(copied from interface <a href="../Hash/interface-Hash.htm" class="link">Hash\Hash</a>)</span></li></ul></li><li class="Collapsed" id="f4d7a599b4ede4"><a href="javascript:void(0);" class="method-pub" target="main">hmac</a>(<a href="../datatype-string.htm" class="link">string</a> $data, <a href="../datatype-string.htm" class="link">string</a> $key)<ul class="description"><li>Public <a href="../datatype-string.htm" class="link">string</a> <span class="smallTitle">hmac</span>(<a href="../datatype-string.htm" class="link">string</a> $data, <a href="../datatype-string.htm" class="link">string</a> $key)</li><li>Get an HMAC of the requested data with the requested key</li><li class="smaller">@param string $data The data to hash</li><li class="smaller">@param string $key The key to hmac against</li><li class="smaller">@return string The hmac'ed data</li><li>Get an HMAC of the requested data with the requested key<br/><span class="note">(copied from interface <a href="../Hash/interface-Hash.htm" class="link">Hash\Hash</a>)</span></li></ul></li></ul>
	</div>
	<div id="footer">Documentation generated on Mar 11, 2011, 12:19:26 -0500 by <a href="http://pear.php.net/package/PHP_UML/" target="_new">PHP_UML</a></div>
</body>
</html>